name: Claude Code

on:
  issue_comment:
    types: [created]
  pull_request_review_comment:
    types: [created]
  issues:
    types: [opened, assigned]
  pull_request_review:
    types: [submitted]

jobs:
  claude:
    if: |
      github.actor == 'shekohex' && (
        (github.event_name == 'issue_comment' && contains(github.event.comment.body, '@claude')) ||
        (github.event_name == 'pull_request_review_comment' && contains(github.event.comment.body, '@claude')) ||
        (github.event_name == 'pull_request_review' && contains(github.event.review.body, '@claude')) ||
        (github.event_name == 'issues' && (contains(github.event.issue.body, '@claude') || contains(github.event.issue.title, '@claude')))
      )
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
      issues: read
      id-token: write
      actions: read # Required for Claude to read CI results on PRs
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2

      - name: Run Claude Code
        id: claude
        uses: anthropics/claude-code-action@beta
        with:
          claude_code_oauth_token: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}

          # This is an optional setting that allows Claude to read CI results on PRs
          additional_permissions: |
            actions: read

          # Optional: Specify model (defaults to Claude Sonnet 4, uncomment for Claude Opus 4.1)
          # model: "claude-opus-4-1-20250805"

          # Optional: Customize the trigger phrase (default: @claude)
          # trigger_phrase: "/claude"

          # Optional: Trigger when specific user is assigned to an issue
          assignee_trigger: "claude-bot"

          # Allow Claude to run specific commands
          allowed_tools: "Bash(bun install),Bash(bun run build),Bash(bun run test:*),Bash(bun run lint:*),Bash(bun run typecheck),Bash(bunx ultracite check),Bash(bunx ultracite fix)"

          # Custom instructions for Claude to customize its behavior for your project
          custom_instructions: |
            IMPORTANT: Follow all rules defined in .claude/CLAUDE.md strictly.

            When working on a Pull Request:
            1. First, check if there's a linked issue or task description to understand the original requirements
            2. Verify that the implementation matches the intended goal from the issue/task
            3. Follow the Ultracite rules and project conventions defined in CLAUDE.md

            Code Standards:
            - Follow Conventional Commits format for any commit messages
            - Ensure strict type safety (no any types, proper TypeScript usage)
            - Follow accessibility (a11y) requirements
            - Write clean, maintainable code following SOLID principles
            - Do NOT add comments unless explicitly requested
            - Do NOT use emojis unless explicitly requested
            - Prefer editing existing files over creating new ones
            - Never create documentation files unless explicitly requested

            Testing & Quality:
            - Ensure all new code has appropriate test coverage
            - Run `bunx ultracite check` to verify code quality
            - Run type checking with `bun run typecheck` if available
            - Consider edge cases and error scenarios

            Be concise and direct in responses. Focus on the specific task at hand.

          # Optional: Custom environment variables for Claude
          # claude_env: |
          #   NODE_ENV: test
