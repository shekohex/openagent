{
  "id": "task-5",
  "title": "Access control: Convex auth + visibility rules",
  "description": "Define Convex functions and queries that enforce per-user visibility and ownership constraints instead of RLS.",
  "context": {
    "patterns": [
      "Restrict read/write by comparing ctx.identity to document.userId",
      "Use action vs mutation appropriately for external calls",
      "Avoid returning sensitive fields"
    ]
  },
  "requirements": [
    "Implement helper to assert ownership in queries/mutations",
    "Scope reads by userId in queries",
    "Service-level operations use internal admin identity when required",
    "Document auth model in code"
  ],
  "plan": [
    "Add auth helpers in convex/_auth.ts",
    "Apply in sessions, provider_keys, permissions functions",
    "Add tests for unauthorized access"
  ],
  "expected_outcome": "Ownership and visibility consistently enforced via Convex functions.",
  "acceptance_criteria": [
    "Non-owner cannot read/write others' docs",
    "Service identity can perform necessary operations",
    "Sensitive fields are never returned"
  ],
  "deliverables": ["convex/_auth.ts", "updated functions enforcing checks"],
  "test_plan": [
    "Attempt cross-tenant reads and confirm denial",
    "Service identity path validated"
  ],
  "references": ["PLAN.md section 5"],
  "dependencies": ["task-4"],
  "status": "pending"
}
