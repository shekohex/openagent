{
  "id": "task-19",
  "title": "Sidecar registration endpoint (/internal/register)",
  "description": "Implement orchestrator endpoint to accept sessionID, regToken, and sidecar ephemeral pubkey; return sealed keys and sidecarAuthToken.",
  "requirements": [
    "POST /internal/register { sessionID, regToken, pubKey }",
    "Validate regToken (one-time, TTL), session belongs to user",
    "Fetch provider keys and envelope-unseal, then re-seal to pubKey",
    "Issue sidecarAuthToken (short TTL) for subsequent control calls"
  ],
  "plan": [
    "Implement token storage/validation",
    "Integrate envelope service for re-encryption",
    "Respond with sealed payload and sidecarAuthToken",
    "Mark instance registered_at"
  ],
  "expected_outcome": "Secure registration flow returns sealed bundle.",
  "acceptance_criteria": [
    "Expired or used token rejected (401)",
    "Registered instance has registered_at set",
    "Return payload contains sealed keys per provider"
  ],
  "deliverables": ["/internal/register handler + token store"],
  "test_plan": [
    "Unit test token TTL/one-time semantics",
    "Integration with a fake sidecar calling register"
  ],
  "references": ["PLAN.md sections 6, 9, 10"],
  "dependencies": ["task-10", "task-8", "task-14"],
  "status": "pending"
}
