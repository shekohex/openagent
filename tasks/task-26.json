{
  "id": "task-26",
  "title": "Event bridge: sidecar -> orchestrator",
  "description": "Subscribe to opencode events and forward to orchestrator event bus.",
  "requirements": [
    "Subscribe to opencode events for the session",
    "Normalize to orchestrator event schema",
    "POST or WS-forward to orchestrator with auth",
    "Retries with exponential backoff and idempotency keys"
  ],
  "plan": [
    "Subscribe via client.event.subscribe()",
    "Normalize and forward events",
    "Handle reconnect and backoff"
  ],
  "expected_outcome": "All opencode events are bridged to orchestrator stream.",
  "acceptance_criteria": [
    "Emitted event reaches orchestrator exactly once",
    "Backoff and resume on orchestrator downtime",
    "Unauthorized requests are rejected and logged"
  ],
  "deliverables": [
    "apps/sidecar/events.ts",
    "apps/orchestrator/event-ingest.ts"
  ],
  "test_plan": [
    "Simulate event storm and verify no duplicates",
    "Network flap test with reconnection"
  ],
  "references": [
    "PLAN.md",
    "SSE/WS patterns"
  ],
  "dependencies": ["task-23", "task-15"],
  "status": "pending"
}
